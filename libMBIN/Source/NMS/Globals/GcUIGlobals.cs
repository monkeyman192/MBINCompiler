using System.Collections.Generic;

using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x4480, GUID = 0x89A1D3829F153672)]
    public class GcUIGlobals : NMSTemplate
    {
        /* 0x0000 */ public float EggModifiyAnimMaxSize;
        /* 0x0004 */ public float EggModifiyAnimLoopTime;
        /* 0x0008 */ public int SeasonFinalStageIndex;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x000C */ public byte[] PaddingC;
        /* 0x0010 */ public List<GcSeasonalRingArray> SeasonalRingTable;
        /* 0x0020 */ public float SeasonalRingMultiplier;
        /* 0x0024 */ public float SeasonalRingPulseTime;
        /* 0x0028 */ public float SeasonalRingChangeTime;
        /* 0x002C */ public float MinSeasonPlayTimeInDays;
        /* 0x0030 */ public float ExpeditionStageChangeTime;
        /* 0x0034 */ public float MilestoneStingDisplayTime;
        /* 0x0038 */ public float StageStingDisplayTime;
        /* 0x003C */ public float EndOfSeasonAlertDelay;
        [NMS(Size = 0x10)]
        /* 0x0040 */ public string ExplorationLogMissionID;
        /* 0x0050 */ public int ForceOpenHazardProtInventoryThreshold;
        /* 0x0054 */ public float PlanetDataExtraRadius;
        /* 0x0058 */ public float StackSizeRateChangeRate;
        /* 0x005C */ public float StackSizeChangeMinRate;
        /* 0x0060 */ public float StackSizeChangeMaxRate;
        /* 0x0064 */ public float ClosestDoorMarkerBuffer;
        /* 0x0068 */ public bool SkipShopIntro;
        /* 0x006C */ public float ZoomFactorOverride;
        /* 0x0070 */ public float PlacedMarkerFadeTime;
        /* 0x0074 */ public float LoadingTravelDistance;
        /* 0x0078 */ public float LoadingScreenTravelSpeed;
        /* 0x007C */ public float LoadingScreenTime;
        /* 0x0080 */ public float OSDMessagePauseOffscreenAngle;
        /* 0x0084 */ public float QuickMenuCentrePos;
        /* 0x0088 */ public float QuickMenuSideOffset;
        /* 0x008C */ public float QuickMenuCentreSideOffset;
        /* 0x0090 */ public float InWorldInteractLabelScale;
        /* 0x0094 */ public float InWorldScreenScaleDistance;
        /* 0x0098 */ public Vector2f InWorldInteractLabelAlignment;
        /* 0x00A0 */ public Vector3f InWorldInteractLabelCentreOffset;
        /* 0x00B0 */ public Vector3f InWorldInteractLabelTopOffset;
        /* 0x00C0 */ public Vector3f InWorldInteractLabelLineOffset;
        /* 0x00D0 */ public float InWorldInteractLabelMinHeadOffset;
        /* 0x00D4 */ public float InWorldInteractLabelNearDistance;
        /* 0x00D8 */ public float InWorldInteractLabelNearRange;
        /* 0x00DC */ public float InWorldInteractLabelFarDistance;
        /* 0x00E0 */ public float InWorldInteractLabelFarRange;
        /* 0x00E4 */ public float ShipHUDMarkerHideDistance;
        /* 0x00E8 */ public float ShipHUDMarkerOffset;
        /* 0x00EC */ public float PetSlotUnlockBounceTime;
        /* 0x00F0 */ public float PetHUDMarkerExtraFollowInfoDistance;
        /* 0x00F4 */ public float PetHUDMarkerHideDistance;
        /* 0x00F8 */ public float PetHUDMarkerHideDistanceShort;
        /* 0x00FC */ public float PetHUDMarkerOffset;
        /* 0x0100 */ public float PetMoodMarkerOffset;
        /* 0x0104 */ public float BeaconHUDMarkerOffset;
        /* 0x0108 */ public Vector2f BinocularEdgeFade;
        /* 0x0110 */ public float BinocularScreenOffset;
        /* 0x0114 */ public float BinocularScreenScale;
        /* 0x0118 */ public float BinocularMarkerSideAngle;
        /* 0x011C */ public float BinocularMarkerUpAngle;
        /* 0x0120 */ public bool BinocularScanScreen;
        /* 0x0124 */ public float BinocularsNearIconOpacity;
        /* 0x0128 */ public float BinocularsNearIconDist;
        /* 0x012C */ public float BinocularsNearIconFadeDist;
        /* 0x0130 */ public float BinocularsMidIconOpacity;
        /* 0x0134 */ public float BinocularsFarIconOpacity;
        /* 0x0138 */ public float BinocularsFarIconDist;
        /* 0x013C */ public float BinocularsFarIconFadeDist;
        /* 0x0140 */ public float AlignmentRequiredToDisableFrostedGlass;
        /* 0x0150 */ public Vector3f BinocularPanelLinePointOffset;
        /* 0x0160 */ public float FrontendOffsetVR;
        /* 0x0164 */ public float ProjectorScale;
        /* 0x0168 */ public float CockpitGlassFrostTime;
        /* 0x016C */ public float CockpitGlassDefrostTime;
        /* 0x0170 */ public float TextPrintoutMultiplier;
        /* 0x0174 */ public float TextPrintoutMultiplierAlien;
        /* 0x0178 */ public bool EnableHandMenuButtons;
        /* 0x0179 */ public bool AllowInWorldDebugBorders;
        /* 0x017C */ public Vector2f MarkerDistanceVRAlignment;
        /* 0x0184 */ public float CompassIconOffsetVR;
        /* 0x0188 */ public float LowerHelmetScreenScale;
        /* 0x018C */ public float LowerHelmetScreenPitch;
        /* 0x0190 */ public Vector3f LowerHelmetScreenOffset;
        /* 0x01A0 */ public float InWorldScreenMinScreenDistance;
        /* 0x01A4 */ public float InWorldScreenForwardOffset;
        /* 0x01A8 */ public float InWorldNGuiScreenScale;
        /* 0x01B0 */ public Vector3f InWorldNGuiScreenRotation;
        /* 0x01C0 */ public Vector2f InWorldNGuiParallax;
        /* 0x01C8 */ public Vector2f InWorldGameGuiAlignment;
        /* 0x01D0 */ public int InWorldInteractLabelWidth;
        /* 0x01D4 */ public int InWorldInteractLabelHeight;
        [NMS(Size = 0x20)]
        /* 0x01D8 */ public string VRDistanceWarningUIFile;
        /* 0x01F8 */ public bool ShowVRDistanceWarning;
        /* 0x0200 */ public Vector3f FaceLockedScreenOffset;
        /* 0x0210 */ public int VRFaceLockedScreenWidth;
        /* 0x0214 */ public int VRFaceLockedScreenHeight;
        /* 0x0218 */ public bool OnlyShowEjectHandlesInVR;
        /* 0x021C */ public int CompassScreenWidth;
        /* 0x0220 */ public int CompassScreenHeight;
        /* 0x0224 */ public float CompassLineContractionStartAngle;
        /* 0x0228 */ public float CompassLineContractionEndAngle;
        /* 0x022C */ public float CompassLineContractionTargetAngle;
        /* 0x0230 */ public int CompassLineNumNotches;
        /* 0x0234 */ public float CompassLineThickness;
        /* 0x0238 */ public float CompassLineOffset;
        /* 0x023C */ public float CompassLineNotchAngleRange;
        /* 0x0240 */ public float CompassLineNotchThickness;
        /* 0x0244 */ public float CompassLineNotchLength;
        /* 0x0248 */ public bool EnableHandMenuDebug;
        /* 0x024C */ public float HandControlMenuCursorScale;
        /* 0x0250 */ public float QuickMenuCursorScale;
        /* 0x0254 */ public float QuickMenuAlpha;
        /* 0x0258 */ public float HandScreenGraphicsWidth;
        /* 0x025C */ public float HandScreenGraphicsHeight;
        /* 0x0260 */ public float HandScreenNearActivateDistance;
        /* 0x0264 */ public float HandButtonRadius;
        /* 0x0268 */ public float HandButtonRadiusTouch;
        /* 0x026C */ public float HandButtonRadiusTouchNear;
        /* 0x0270 */ public float HandButtonRadiusTouchNearActive;
        /* 0x0274 */ public float HandButtonPostClickTime;
        /* 0x0278 */ public float HandButtonReleaseThreshold;
        /* 0x027C */ public float HandButtonReleaseThresholdInit;
        /* 0x0280 */ public float HandButtonCursorScale;
        /* 0x0284 */ public float HandButtonPushDistance;
        /* 0x0288 */ public float HandButtonNearDistance;
        /* 0x028C */ public float HandButtonRadiusClick;
        /* 0x0290 */ public float HandButtonClickTime;
        /* 0x0294 */ public float HandButtonTouchReturnTime;
        /* 0x0298 */ public float HandButtonFrontendCursorScale;
        /* 0x029C */ public float HandButtonThickness;
        /* 0x02A0 */ public float HandButtonDotRadius;
        /* 0x02A4 */ public float HandButtonPulseRadius;
        /* 0x02A8 */ public float HandButtonPulseThickness;
        /* 0x02AC */ public float ShipSideScreenHeight;
        /* 0x02B0 */ public float SolidPointerScale;
        /* 0x02B4 */ public float SolidPointerLengthScale;
        /* 0x02B8 */ public float SolidPointerMaxLength;
        /* 0x02BC */ public float InWorldInteractionScreenScale;
        /* 0x02C0 */ public float InWorldNPCInteractionScreenScale;
        /* 0x02C4 */ public bool EnableCraftingTree;
        /* 0x02C5 */ public bool QuickMenuEnableSwipe;
        /* 0x02C8 */ public float QuickMenuSwipeHeightMin;
        /* 0x02CC */ public float QuickMenuSwipeHeightMax;
        /* 0x02D0 */ public float BuildMenuItemNavAnimTime;
        /* 0x02D4 */ public float BuildMenuItemNextNavAnimTime;
        /* 0x02D8 */ public float BuildMenuItemNextNavAnimWait;
        /* 0x02DC */ public float QuickMenuInteractAdjustX;
        /* 0x02E0 */ public float QuickMenuInteractAdjustY;
        /* 0x02E4 */ public int QuickMenuScreenWidth;
        /* 0x02E8 */ public int QuickMenuScreenHeight;
        /* 0x02EC */ public float QuickMenuHighlightRate;
        /* 0x02F0 */ public float HandControlButtonSize;
        /* 0x02F4 */ public float HandControlPointMargin;
        /* 0x02F8 */ public float HandControlPointActiveMargin;
        /* 0x02FC */ public float HandControlMenuMoveDistance;
        /* 0x0300 */ public float HandControlMenuMoveDistanceScroll;
        /* 0x0304 */ public float HandControlMenuMoveDistanceVertical;
        /* 0x0308 */ public float HandControlMenuMoveActionDistance;
        /* 0x030C */ public float HandControlMenuAngle;
        /* 0x0310 */ public float HandControlMenuSurfaceOffset;
        /* 0x0314 */ public float HandControlMenuSelectRadius;
        /* 0x0318 */ public float HandControlMenuSelectRadius1;
        /* 0x031C */ public float HandControlMenuSelectRadius2;
        /* 0x0320 */ public float HandControlTopMenuSelectRadius;
        /* 0x0324 */ public int HandScreenWeaponWidth;
        /* 0x0328 */ public int HandScreenWeaponHeight;
        /* 0x032C */ public int HandScreenWidth;
        /* 0x0330 */ public int HandScreenHeight;
        /* 0x0340 */ public Colour QuickMenuSelectedItemColour1;
        /* 0x0350 */ public Colour QuickMenuSelectedItemColour2;
        /* 0x0360 */ public TkModelRendererData ShipThumbnailModelView;
        /* 0x0410 */ public TkModelRendererData PetThumbnailModelView;
        /* 0x04C0 */ public TkModelRendererData MultitoolThumbnailModelView;
        /* 0x0570 */ public TkModelRendererData LargeMultitoolThumbnailModelView;
        /* 0x0620 */ public Colour FrontendCursorBackgroundColour;
        /* 0x0630 */ public float NGuiHmdOffset;
        /* 0x0634 */ public float HmdFramerateScreenPitch;
        /* 0x0640 */ public Vector3f HmdFramerateScreenOffset;
        /* 0x0650 */ public float CrosshairScaleHmd;
        /* 0x0654 */ public float CrosshairOffsetHmd;
        /* 0x0658 */ public float CrosshairOffsetHmdUp;
        /* 0x065C */ public int CrosshairScreenWidth;
        /* 0x0660 */ public int CrosshairScreenHeight;
        /* 0x0664 */ public float HUDMarkerHoverAngleTestGroundHmd;
        /* 0x0668 */ public float HUDMarkerWideHoverAngleTestHmd;
        /* 0x066C */ public bool InteractionInWorldPlayerCamAlways;
        /* 0x0670 */ public float InteractionInWorldPitchDistance;
        /* 0x0674 */ public float InteractionInWorldMinScreenDistance;
        /* 0x0678 */ public float InteractionInWorldSeatedNPCHeightAdjust;
        /* 0x067C */ public float TravelTargetRadius;
        /* 0x0680 */ public float TravelLineThickness;
        /* 0x0690 */ public Colour TravelLineColour;
        /* 0x06A0 */ public Colour TravelLineTooFarColour;
        /* 0x06B0 */ public Colour TravelLineTooSteepColour;
        /* 0x06C0 */ public Colour TravelLineInvalidColour;
        /* 0x06D0 */ public Colour TravelLineNotAllowedColour;
        /* 0x06E0 */ public Colour TravelTargetColour;
        /* 0x06F0 */ public bool AlwaysCloseQuickMenu;
        /* 0x06F1 */ public bool UseWorldNodesForRepair;
        /* 0x06F2 */ public bool RepairTechUseTechIcon;
        /* 0x06F3 */ public bool DebugMissionLogText;
        /* 0x06F4 */ public bool DebugShowMaintenanceScreenCentre;
        /* 0x06F5 */ public bool DebugPopupSizes;
        /* 0x06F6 */ public bool DebugInventoryIndices;
        /* 0x06F7 */ public bool FixedInventoryIconPositions;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x06F8 */ public byte[] Padding6F8;
        /* 0x0700 */ public GcHUDEffectRewardData OSDRareItemRewardEffect;
        /* 0x0760 */ public GcHUDEffectRewardData OSDEpicItemRewardEffect;
        /* 0x07C0 */ public float OSDMessageQueueSpeedMultiplier;
        /* 0x07C4 */ public int OSDMessageQueueMin;
        /* 0x07C8 */ public int OSDMessageQueueMax;
        /* 0x07CC */ public float PopupValueSectionBaseHeight;
        /* 0x07D0 */ public float PopupValueSectionHeight;
        /* 0x07E0 */ public Colour ProcProductColourCommon;
        /* 0x07F0 */ public Colour ProcProductColourUncommon;
        /* 0x0800 */ public Colour ProcProductColourRare;
        /* 0x0810 */ public List<Vector2f> InventoryIconPositions;
        /* 0x0820 */ public Colour PickedItemBorderColour;
        /* 0x0830 */ public Colour MultiplayerMissionParticipantsColour;
        [NMS(Size = 0x10)]
        /* 0x0840 */ public string MultiplayerMissionInteractStartTrigger;
        [NMS(Size = 0x10)]
        /* 0x0850 */ public string MultiplayerMissionInteractEndTrigger;
        /* 0x0860 */ public float NotificationHazardMinTimeAfterRecharge;
        /* 0x0864 */ public float LoadFadeInDefaultTime;
        /* 0x0868 */ public float DroneIndicatorRadius;
        /* 0x086C */ public float DroneIndicatorCentreRadiusMax;
        /* 0x0870 */ public float DroneIndicatorCentreRadiusMin;
        /* 0x0874 */ public float DroneIndicatorFadeRange;
        /* 0x0878 */ public float WantedDetectMessageTime;
        /* 0x087C */ public float WantedDetectMinTimeout;
        /* 0x0880 */ public float TakeoffFuelMessageTime;
        /* 0x0884 */ public float MarkerHorizonOffsetAngle;
        /* 0x0888 */ public float MarkerHorizonMinOffset;
        /* 0x088C */ public float MarkerHorizonApproachAngle;
        /* 0x0890 */ public float MarkerOffsetTypeAngle;
        /* 0x0894 */ public float MarkerOffsetTypeAngleBattle;
        /* 0x0898 */ public float MarkerOffsetTypeAngleBounty;
        /* 0x089C */ public float MarkerOffsetTypeAnglePlayerShip;
        /* 0x08A0 */ public float MarkerHorizonOffPlanetLightBeamAngle;
        /* 0x08A4 */ public float MarkerHorizonShipApproachOffset;
        /* 0x08A8 */ public float TransferPopupCursorOffsetFactor;
        /* 0x08AC */ public float ScannableIconMergeAngle;
        /* 0x08B0 */ public float CreatureIconMergeAngle;
        /* 0x08B4 */ public float MissionObjectiveBaseHeight;
        /* 0x08B8 */ public float MarkerTagAppearDelay;
        /* 0x08BC */ public Vector2f CompassCentre;
        /* 0x08C4 */ public float CompassHeight;
        /* 0x08C8 */ public float CompassWidth;
        /* 0x08CC */ public float CompassDistanceScaleMin;
        /* 0x08D0 */ public float CompassDistanceScaleRange;
        /* 0x08D4 */ public float CompassDistanceSpaceScaleMin;
        /* 0x08D8 */ public float CompassDistanceSpaceScaleRange;
        /* 0x08DC */ public float CompassDistanceScale;
        /* 0x08E0 */ public float CompassDistanceShipMinScale;
        /* 0x08E4 */ public float CompassDistanceMaxAngle;
        /* 0x08E8 */ public float CompassDistanceYOffset;
        /* 0x08EC */ public float CompassAngleClamp;
        /* 0x08F0 */ public float CompassAngleFade;
        /* 0x08F4 */ public TkCurveType CompassCurve;
        /* 0x08F8 */ public float CompassAngleClampSpace;
        /* 0x08FC */ public float BaseComplexityDangerFactor;
        /* 0x0900 */ public float BaseComplexityWarningFactor;
        /* 0x0910 */ public Colour BaseComplexityDefaultColour;
        /* 0x0920 */ public Colour BaseComplexityWarningColour;
        /* 0x0930 */ public Colour BaseComplexityDangerColour;
        /* 0x0940 */ public float MarkerRingInnerRadius;
        /* 0x0944 */ public float MarkerRingOuterRadius;
        /* 0x0950 */ public Colour MarkerRingBGColour;
        /* 0x0960 */ public float RepairTechRepairedWaitTime1;
        /* 0x0964 */ public float RepairTechRepairedWaitTime2;
        /* 0x0968 */ public float RepairTechRepairedMessageTime;
        /* 0x096C */ public float TechPopupRepairLayerHeight;
        /* 0x0970 */ public float TechPopupBuildLayerHeight;
        /* 0x0974 */ public float TechPopupRequirementHeight;
        /* 0x0978 */ public float DamageTrackArrowTime;
        /* 0x097C */ public bool EnableBlackouts;
        /* 0x0980 */ public float HUDMarkerObjectMinScreenDistance;
        /* 0x0984 */ public float HUDMarkerDistanceOrTimeDistance;
        /* 0x0988 */ public float MarkerComponentOffset;
        /* 0x098C */ public float RepairTechLabelOffset;
        /* 0x0990 */ public float MaintenanceIconFadeStart;
        /* 0x0994 */ public float MaintenanceIconFadeTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x0998 */ public byte[] Padding998;
        /* 0x09A0 */ public TkModelRendererData RepairCamera;
        /* 0x0A50 */ public TkModelRendererData RepairWeaponCamera;
        /* 0x0B00 */ public TkModelRendererData RepairBackpackCamera;
        /* 0x0BB0 */ public TkModelRendererData RepairShipCamera;
        /* 0x0C60 */ public TkModelRendererData RepairShipCameraVR;
        /* 0x0D10 */ public List<TkModelRendererData> VehicleTypeRepairCamera;
        /* 0x0D20 */ public Vector2f BinocularsDiscoveryPos;
        /* 0x0D30 */ public Colour InteractionLabelCostColour;
        /* 0x0D40 */ public Colour InteractionLabelPickupColour;
        /* 0x0D50 */ public Colour InteractionLabelPickupFillColour;
        /* 0x0D60 */ public Vector2f PersonalRefinerInputPos;
        /* 0x0D68 */ public Vector2f PersonalRefinerOutputPos;
        /* 0x0D70 */ public TkTextureResource RefinerPopupEmptyOutputIcon;
        /* 0x0DF4 */ public float RefinerPadStartTime;
        /* 0x0DF8 */ public float RefinerPadStartDecayTime;
        /* 0x0DFC */ public float RefinerBeginDialInnerRadius;
        /* 0x0E00 */ public float RefinerProgressDialInnerRadius;
        /* 0x0E10 */ public Vector3f DefaultRefinerOffsetIn;
        /* 0x0E20 */ public Vector3f DefaultRefinerOffsetOut;
        /* 0x0E30 */ public Vector2f RefinerParallax;
        /* 0x0E38 */ public Vector2f ModelViewWorldParallax;
        /* 0x0E40 */ public Vector2f HUDPlayerSentinelPulseFreq;
        /* 0x0E48 */ public Vector2f HUDPlayerSentinelPulseSize;
        /* 0x0E50 */ public float HUDPlayerSentinelPulseWidth;
        /* 0x0E54 */ public float HUDPlayerSentinelRangeFactor;
        /* 0x0E58 */ public float HUDPlayerSentinelPulseScanFreq;
        /* 0x0E5C */ public float HUDPlayerPhonePulseScanFreq;
        /* 0x0E60 */ public float RefinerAutoCloseTime;
        /* 0x0E70 */ public Colour RefinerBackgroundColour;
        /* 0x0E80 */ public Colour RefinerErrorBackgroundColour;
        /* 0x0E90 */ public Colour GridDisconnectedColour;
        /* 0x0EA0 */ public Colour GridOnlineColour;
        /* 0x0EB0 */ public Colour GridOfflineColour;
        /* 0x0EC0 */ public Colour GridBackgroundNeutralColour;
        /* 0x0ED0 */ public Colour GridBackgroundPositiveColour;
        /* 0x0EE0 */ public Colour GridBackgroundNegativeColour;
        /* 0x0EF0 */ public Colour TransferSendPopupColour;
        /* 0x0F00 */ public float BountyMarkerOffset;
        /* 0x0F04 */ public float TransitionOffset;
        /* 0x0F08 */ public float PageTurnTime;
        /* 0x0F0C */ public TkCurveType PageTurnCurve;
        /* 0x0F10 */ public TkCurveType PageTurnFadeCurve;
        /* 0x0F14 */ public float LowHealthShieldMin;
        /* 0x0F18 */ public float LowHealthShieldFactor;
        /* 0x0F1C */ public int MaxDialogCharSizeRoman;
        [NMS(Size = 0x20)]
        /* 0x0F20 */ public string MaxDialogCharSizeRomanString;
        /* 0x0F40 */ public int MaxDialogCharSizeIdeographic;
        [NMS(Size = 0x20)]
        /* 0x0F44 */ public string MaxDialogCharSizeIdeographicString;
        /* 0x0F64 */ public float ShipOverheatSwitchMessageWait;
        /* 0x0F68 */ public float ShipOverheatSwitchMessageTime;
        /* 0x0F6C */ public bool LeadTargetEnabled;
        /* 0x0F70 */ public Vector2f SaveIconPosition;
        /* 0x0F78 */ public float MissionStartEndTime;
        /* 0x0F7C */ public float MissionStartEndOSDTime;
        /* 0x0F80 */ public float MissionStartEndOSDTimeProcedural;
        /* 0x0F84 */ public float StandingRewardOSDTime;
        /* 0x0F90 */ public Colour MissionOSDMessageBarColour;
        /* 0x0FA0 */ public Colour NotificationDefaultColour;
        /* 0x0FB0 */ public Colour NotificationDangerColour;
        /* 0x0FC0 */ public Colour NotificationInfoColour;
        /* 0x0FD0 */ public Colour NotificationUrgentColour;
        /* 0x0FE0 */ public float ShipDamageDirectionIndicatorRadius;
        /* 0x0FE4 */ public float ShipDamageDirectionIndicatorFadeRange;
        /* 0x0FE8 */ public float OnFootDamageDirectionIndicatorRadius;
        /* 0x0FEC */ public float OnFootDamageDirectionIndicatorFadeRange;
        /* 0x0FF0 */ public float DamageDirectionIndicatorOnScreenRadiusMultiplier;
        /* 0x0FF4 */ public Vector2f DialogPageCursorOffset;
        /* 0x0FFC */ public Vector2f IntermediateInteractionPageCursorOffset;
        /* 0x1004 */ public Vector2f CursorlessDialogPageCursorOffset;
        /* 0x100C */ public int MissionSpecificMissionPercent;
        /* 0x1010 */ public int MissionLoopCount;
        /* 0x1014 */ public int MissionSeedOffset;
        /* 0x1020 */ public Vector3f SpaceMapCockpitOffset;
        /* 0x1030 */ public float SpaceMapCockpitScale;
        /* 0x1034 */ public float SpaceMapCockpitScaleAdjustDropShip;
        /* 0x1038 */ public float SpaceMapCockpitScaleAdjustFighter;
        /* 0x103C */ public float SpaceMapCockpitScaleAdjustScientific;
        /* 0x1040 */ public float SpaceMapCockpitScaleAdjustShuttle;
        /* 0x1044 */ public float SpaceMapCockpitScaleAdjustRoyal;
        /* 0x1048 */ public float SpaceMapCockpitScaleAdjustAlien;
        /* 0x104C */ public float SpaceMapCockpitAngle;
        /* 0x1050 */ public float TargetDisplayScale;
        /* 0x1054 */ public float TargetDisplayShipScale;
        /* 0x1060 */ public Vector3f TargetDisplayShipOffset;
        /* 0x1070 */ public float TargetDisplayDamageFlashTime;
        [NMS(Size = 0xC, Ignore = true)]
        /* 0x1074 */ public byte[] Padding1074;
        /* 0x1080 */ public GcScanEffectData TargetDisplayScanEffect;
        /* 0x10D0 */ public bool ProgressiveDialogStyle;
        /* 0x10D4 */ public float CommunicatorMessageTime;
        /* 0x10E0 */ public Colour CommunicatorMessageColour;
        /* 0x10F0 */ public float GridFlickerBaseAlpha;
        /* 0x10F4 */ public float GridFlickerFreq;
        /* 0x10F8 */ public float GridFlickerAmp;
        /* 0x10FC */ public float HUDMarkerLabelWidthMultiplier;
        /* 0x1100 */ public float HUDMarkerLabelBaseWidth;
        /* 0x1104 */ public float HUDMarkerLabelArriveDistance;
        /* 0x1108 */ public float HUDMarkerLabelDisplayDistance;
        /* 0x110C */ public float HUDMarkerNonActiveMissionAlpha;
        /* 0x1110 */ public bool DebugMarkerLabels;
        [NMS(Size = 0xF, Ignore = true)]
        /* 0x1111 */ public byte[] Padding1111;
        /* 0x1120 */ public GcScanEffectData DebugEditorPreviewEffect;
        /* 0x1170 */ public bool ShowDamageNumbers;
        /* 0x1174 */ public float QuickMenuCloseTime;
        /* 0x1178 */ public float QuickMenuErrorTime;
        /* 0x117C */ public float FrontendWaitResponse;
        /* 0x1180 */ public float FrontendWaitInitial;
        /* 0x1184 */ public float FrontendWaitInitialTerminal;
        /* 0x1188 */ public float FrontendWaitFadeTextOut;
        /* 0x118C */ public float FrontendWaitFadeTextFrameOut;
        /* 0x1190 */ public float FrontendWaitFadeProgressiveDialogOut;
        /* 0x1194 */ public float FrontendWaitResponseOffset;
        /* 0x1198 */ public float TalkBoxAlienTextSpeed;
        /* 0x119C */ public float TalkBoxAlienTextTimeMin;
        /* 0x11A0 */ public float TalkBoxAlienTextTimeMax;
        /* 0x11A4 */ public float DescriptionTextDelay;
        /* 0x11A8 */ public float DescriptionTextSpeed;
        /* 0x11AC */ public float DescriptionTextSpeedProgressive;
        /* 0x11B0 */ public float DescriptionTextTimeMin;
        /* 0x11B4 */ public float DescriptionTextTimeMax;
        /* 0x11B8 */ public float ConsoleTextSpeed;
        /* 0x11BC */ public float ConsoleTextTimeMin;
        /* 0x11C0 */ public float ConsoleTextTimeMax;
        /* 0x11C4 */ public float HoverOffscreenBorder;
        /* 0x11C8 */ public float HoverOffscreenBorderVR;
        /* 0x11CC */ public float TransferSendOffscreenBorder;
        /* 0x11D0 */ public float TimedEventLookTime;
        /* 0x11D4 */ public float CreatureDistanceSize;
        /* 0x11D8 */ public float CreatureDistanceOffsetY;
        /* 0x11DC */ public float CreatureDistanceShadowOffset;
        /* 0x11E0 */ public float CreatureDistanceDisplayAngle;
        /* 0x11E4 */ public float CreatureDistanceFadeTime;
        /* 0x11E8 */ public float CreatureDistanceAlpha;
        /* 0x11EC */ public bool ShowOnscreenPredatorMarkers;
        /* 0x11F0 */ public float DamageImpactMergeTime;
        /* 0x11F4 */ public float DamageImpactTimeBetweenNumbers;
        /* 0x11F8 */ public float DamageImpactMinDistance;
        /* 0x11FC */ public float DamagePerSecondSampleTime;
        /* 0x1200 */ public float DamageNumberTime;
        /* 0x1204 */ public float DamageNumberSizeInShip;
        /* 0x1208 */ public float DamageNumberSize;
        /* 0x120C */ public float DamageNumberSizeCritMultiplier;
        /* 0x1210 */ public float DamageNumberSizeLaserMultiplier;
        /* 0x1214 */ public float DamageNumberLaserMinDamage;
        /* 0x1218 */ public float DamageNumberLaserMaxDamage;
        /* 0x121C */ public float DamageNumberBlackAlpha;
        /* 0x1220 */ public float DamageNumberOutline;
        /* 0x1224 */ public float DamageNumberOutline2;
        /* 0x1228 */ public float DamageNumberOffsetX;
        /* 0x122C */ public float DamageNumberOffsetY;
        /* 0x1230 */ public Vector2f DamageNumberSideSpeed;
        /* 0x1238 */ public float DamageNumberFadeIn;
        /* 0x123C */ public float DamageNumberFadeOut;
        /* 0x1240 */ public float DamageNumberUpOffset;
        /* 0x1244 */ public TkCurveType DamageNumberUpCurve;
        /* 0x1250 */ public Colour DamageNumberCriticalColour;
        /* 0x1260 */ public Colour DamageNumberIneffectiveColour;
        /* 0x1270 */ public Colour DamageNumberIneffectiveWarningColour;
        /* 0x1280 */ public Colour PhotoModeSelectedColour;
        /* 0x1290 */ public Colour PhotoModeUnselectedColour;
        /* 0x12A0 */ public Colour FuelBgColour;
        /* 0x12B0 */ public float PhotoModeValueAlpha;
        /* 0x12B4 */ public float PhotoModeTimeofDayChange;
        /* 0x12B8 */ public float FrigateIconOffset;
        /* 0x12BC */ public float CreatureIconOffset;
        /* 0x12C0 */ public float CreatureIconOffsetPhysics;
        /* 0x12C4 */ public float DelayBeforeHidingHangarAfterGalaxyMap;
        /* 0x12C8 */ public float DelayBeforeShowingHangarIntoGalaxyMap;
        /* 0x12CC */ public float FreighterSummonTurn;
        /* 0x12D0 */ public float FreighterSummonPitch;
        /* 0x12D4 */ public float FreighterSummonOffset;
        /* 0x12D8 */ public float FreighterSummonDelay;
        /* 0x12DC */ public int FreighterSummonTurnNumTries;
        /* 0x12E0 */ public float FreighterSummonTurnAngleIncrement;
        /* 0x12E4 */ public float FreighterSummonGridSize;
        /* 0x12E8 */ public float FreighterCommanderMarkerMinDistance;
        /* 0x12EC */ public float FreighterBaseIconOffset;
        /* 0x12F0 */ public float FreighterSurfaceMinAngle;
        /* 0x12F4 */ public float FreighterSummonPulseRate;
        /* 0x12F8 */ public float FreighterSummonPulseFadeAmount;
        /* 0x12FC */ public float FreighterSummonPlanetOffset;
        /* 0x1300 */ public float FreighterSummonLookTime;
        /* 0x1304 */ public float FreighterHighlightRange;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x1308 */ public byte[] Padding1308;
        /* 0x1310 */ public GcScanEffectData FreighterSummonScanEffect;
        /* 0x1360 */ public Colour FreighterSummonScanEffectColourBlocked;
        /* 0x1370 */ public Colour FreighterSummonScanEffectColourHighlight;
        /* 0x1380 */ public float PirateCountdownTime;
        /* 0x1384 */ public float PirateAttackIndicatorWidth;
        /* 0x1388 */ public float PirateAttackIndicatorRadius;
        /* 0x138C */ public float PirateAttackProbeDisplayFinishFactor;
        /* 0x1390 */ public float HazardArrowsLevel2Threshold;
        /* 0x1394 */ public float HazardArrowsLevel3Threshold;
        /* 0x1398 */ public float ArrowBounceLength;
        /* 0x139C */ public float ArrowBounceRate;
        /* 0x13A0 */ public float ArrowBounceRightRate1;
        /* 0x13A4 */ public float ArrowBounceRightRate2;
        /* 0x13A8 */ public TkCurveType ArrowBounceRightCurve;
        /* 0x13AC */ public float ArrowBounceLeftRate1;
        /* 0x13B0 */ public float ArrowBounceLeftRate2;
        /* 0x13B4 */ public float ArrowBounceLeftRate3;
        /* 0x13B8 */ public TkCurveType ArrowBounceLeftCurve;
        /* 0x13BC */ public float PlanetScanDelayTime;
        /* 0x13C0 */ public float AlwaysShowIconFadeDistance;
        /* 0x13C4 */ public float AlwaysShowIconFadeRange;
        /* 0x13C8 */ public float FrigatePurchaseNotificationResetDistanceMultiplier;
        /* 0x13CC */ public float FrigateDamageIconVisibilityDistance;
        /* 0x13D0 */ public float FreighterLeaderIconDistance;
        /* 0x13D4 */ public float FreighterEntranceOffset;
        /* 0x13D8 */ public float ShipHeadsUpDisplayDistance;
        /* 0x13DC */ public float ShipHeadsUpLineFadeTime;
        /* 0x13E0 */ public float CrosshairAimTime;
        /* 0x13E4 */ public float CrosshairAimOffTime;
        /* 0x13E8 */ public float CrosshairInnerMinFade;
        /* 0x13EC */ public float CrosshairInnerMinFadeRange;
        /* 0x13F0 */ public float CrosshairLeadScaleIn;
        /* 0x13F4 */ public float CrosshairLeadInDelay;
        /* 0x13F8 */ public float CrosshairLeadInTime;
        /* 0x13FC */ public float CrosshairLeadCornerOffset;
        /* 0x1400 */ public float CrosshairLeadTopOffset;
        /* 0x1404 */ public float CrosshairLeadTopLock;
        /* 0x1408 */ public float CrosshairLeadPulseSize;
        /* 0x140C */ public TkCurveType CrosshairLeadScaleCurve;
        /* 0x1410 */ public float CrosshairSpringTime;
        /* 0x1414 */ public float CrosshairSpringAimTime;
        /* 0x1418 */ public float CrosshairLeadSpring;
        /* 0x141C */ public float CrosshairLeadSpringOff;
        /* 0x1420 */ public float CrosshairLeadFadeRange;
        /* 0x1424 */ public float CrosshairLeadFadeSize;
        /* 0x1430 */ public Colour CrosshairLeadThreatColour;
        /* 0x1440 */ public Colour CrosshairLeadPassiveColour;
        /* 0x1450 */ public float CrosshairInterceptSize;
        /* 0x1454 */ public float CrosshairInterceptBaseSize;
        /* 0x1458 */ public float CrosshairInterceptCentreBaseSize;
        /* 0x145C */ public float CrosshairInterceptSpringTime;
        /* 0x1460 */ public float CrosshairInterceptAlpha;
        /* 0x1464 */ public float CrosshairInterceptLockRange;
        /* 0x1468 */ public float CrosshairTargetLockSize;
        [NMS(Size = 0xF)]
        /* 0x146C */ public float[] CrosshairTargetLockSizeSpecific;
        /* 0x14A8 */ public TkCurveType CrosshairTargetLockCurve;
        /* 0x14AC */ public TkCurveType CrosshairTargetLockAlphaCurve;
        /* 0x14B0 */ public Colour CrosshairColour;
        /* 0x14C0 */ public TkHitCurveData CrosshairLeadHitCurve;
        /* 0x14D0 */ public TkHitCurveData ShootableHitCurve;
        /* 0x14E0 */ public int ControlScrollSteps;
        /* 0x14E4 */ public float ControlScrollDistance;
        /* 0x14F0 */ public Colour SelectedControlColour;
        /* 0x1500 */ public Colour RemappedControlColour;
        /* 0x1510 */ public float MissionCompassIconScaler;
        /* 0x1514 */ public float MissionMarkerSize;
        /* 0x1518 */ public float CreatureRoutineMarkerTime;
        /* 0x151C */ public int CreatureRoutineRegionsPerFrame;
        /* 0x1520 */ public float SpaceMarkersOffset;
        /* 0x1524 */ public float SpaceMarkersBattleOffset;
        /* 0x1528 */ public float LargeSpaceIconSize;
        /* 0x152C */ public float SmallSpaceIconSize;
        /* 0x1530 */ public float PetHoverIconSize;
        /* 0x1534 */ public float PetIconSize;
        /* 0x1538 */ public Vector2f TrackTypeIconOffset;
        /* 0x1540 */ public float TrackTypeIconSize;
        /* 0x1544 */ public float TrackPrimaryCentreOffset;
        /* 0x1548 */ public float TrackTimerAlpha;
        /* 0x154C */ public float TrackTimerRadarPulseSize;
        /* 0x1550 */ public float TrackTimerIconOuterRadius;
        /* 0x1554 */ public float TrackTimerIconInnerRadius;
        /* 0x1558 */ public float TrackTimerIconExclaimRadius;
        /* 0x155C */ public float TrackGlowBase;
        /* 0x1560 */ public float TrackHitPulseTime;
        /* 0x1564 */ public float TrackGlowCritical;
        /* 0x1568 */ public float TrackGlowHit;
        /* 0x156C */ public float MissileCentreOffset;
        /* 0x1570 */ public float TrackMissileTargetPulseRate;
        /* 0x1574 */ public float TrackScaleCritical;
        /* 0x1578 */ public float TrackScaleHit;
        /* 0x157C */ public float TrackLeadTargetInScale;
        /* 0x1580 */ public float TrackReticuleScale;
        /* 0x1584 */ public float TrackReticuleAngle;
        /* 0x1588 */ public float TrackReticuleInTime;
        /* 0x158C */ public float TrackReticuleInactiveTime;
        /* 0x1590 */ public float TrackReticuleRandomTime;
        /* 0x1594 */ public float TrackReticuleRandomDelay;
        /* 0x1598 */ public TkCurveType TrackReticuleInCurve;
        /* 0x159C */ public TkCurveType TrackReticuleInAngleCurve;
        /* 0x15A0 */ public float CreatureReticuleScale;
        /* 0x15A4 */ public TkCurveType CreatureReticuleScaleCurve;
        /* 0x15A8 */ public TkCurveType CreatureReticuleAlphaCurve;
        /* 0x15AC */ public bool CreatureInteractLabelUseBB;
        /* 0x15B0 */ public float CreatureInteractLabelOffsetY;
        /* 0x15B4 */ public float HUDPlayerTrackNoSightPulse;
        /* 0x15B8 */ public float HUDPlayerTrackTimerStart;
        /* 0x15BC */ public float HUDPlayerTrackTimerStartFade;
        /* 0x15C0 */ public float HUDPlayerTrackTimerEnd;
        /* 0x15C4 */ public float HUDPlayerTrackTimerPulseRate;
        /* 0x15C8 */ public TkCurveType TrackCritCurve;
        /* 0x15CC */ public Vector2f TrackCriticalHitOffset;
        /* 0x15D4 */ public float TrackCriticalHitSize;
        /* 0x15D8 */ public float TrackCriticalPulseTime;
        /* 0x15DC */ public float ThirdPersonCrosshairDistance;
        /* 0x15E0 */ public float ThirdPersonCrosshairCircle1Distance;
        /* 0x15E4 */ public float ThirdPersonCrosshairCircle2Distance;
        /* 0x15E8 */ public float HUDPlayerTrackArrowShipLabelOffset;
        /* 0x15EC */ public float HUDPlayerTrackArrowIconPulseTime;
        /* 0x15F0 */ public float HUDPlayerTrackArrowIconShowTime;
        /* 0x15F4 */ public float HUDPlayerTrackArrowIconFadeTime;
        /* 0x15F8 */ public Vector2f HUDPlayerTrackArrowIconPulseSize;
        /* 0x1600 */ public float HUDPlayerTrackArrowIconPulseWidth1;
        /* 0x1604 */ public float HUDPlayerTrackArrowIconPulseWidth2;
        /* 0x1608 */ public float HUDPlayerTrackArrowIconPulse2Alpha;
        /* 0x160C */ public float HUDPlayerTrackArrowIconFadeDist;
        /* 0x1610 */ public float HUDPlayerTrackArrowIconFadeRange;
        /* 0x1614 */ public float HUDPlayerTrackArrowPulseOffset;
        /* 0x1618 */ public float HUDPlayerTrackArrowPulseRate;
        /* 0x161C */ public Vector2f HUDPlayerTrackIconOffset;
        /* 0x1624 */ public float ShipFullscreenDamper;
        /* 0x1628 */ public float ShipDesatDamper;
        /* 0x162C */ public float ScanEventArrowShipFadeRange;
        /* 0x1630 */ public float ScanEventArrowShipFadeDistance;
        /* 0x1634 */ public float ScanEventArrowPlayerFadeRange;
        /* 0x1638 */ public float ScanEventArrowPlayerFadeDistance;
        /* 0x163C */ public float ScanEventArrowOffsetMultiplier;
        /* 0x1640 */ public float ScanEventArrowOffsetMultiplierOneEvent;
        /* 0x1644 */ public float ScanEventArrowSecondaryAlpha;
        /* 0x1648 */ public GcAudioWwiseEvents ScanEventIconAudio;
        /* 0x164C */ public TkNGuiRectanglePulseEffect PulseBarData;
        /* 0x1660 */ public TkNGuiRectanglePulseEffect PulseIconData;
        /* 0x1680 */ public Colour PulseDamageColour;
        /* 0x1690 */ public Colour PulseAlertColour;
        /* 0x16A0 */ public float TechDisplayDelayTime;
        /* 0x16A4 */ public float CriticalMessageTime;
        /* 0x16A8 */ public int NumDeathQuotes;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x16AC */ public byte[] Padding16AC;
        [NMS(Size = 0x10)]
        /* 0x16B0 */ public string ShowStatWithDeathQuote;
        /* 0x16C0 */ public bool EnableKanaConversion;
        /* 0x16C4 */ public float HUDDisplayTime;
        /* 0x16C8 */ public float HUDPlayerTrackDangerPulse;
        /* 0x16CC */ public float HUDPlayerTrackArrowTextOffset;
        /* 0x16D0 */ public float HUDPlayerTrackArrowTextHeight;
        /* 0x16E0 */ public Colour HUDPlayerTrackArrowTextColour;
        /* 0x16F0 */ public float HUDPlayerTrackArrowHealthOffset;
        /* 0x16F4 */ public Vector2f HUDPlayerTrackArrowHealthSize;
        /* 0x16FC */ public float HUDPlayerTrackArrowHealthGlowOffset;
        /* 0x1700 */ public Vector2f HUDPlayerTrackArrowHealthGlowSize;
        /* 0x1708 */ public float HUDPlayerTrackArrowTargetDist;
        /* 0x170C */ public float HUDPlayerTrackArrowOffset;
        /* 0x1710 */ public float HUDPlayerTrackArrowScreenBorder;
        /* 0x1714 */ public float HUDPlayerTrackArrowSize;
        /* 0x1718 */ public float HUDPlayerTrackArrowSizeMin;
        /* 0x171C */ public float HUDPlayerTrackArrowSizeMax;
        /* 0x1720 */ public float HUDPlayerTrackArrowIconSize;
        /* 0x1724 */ public float HUDPlayerTrackArrowSmallIconSize;
        /* 0x1728 */ public float HUDPlayerTrackArrowArrowSize;
        /* 0x172C */ public float HUDPlayerTrackArrowDotSize;
        /* 0x1730 */ public Colour HUDPlayerTrackArrowDotColour;
        /* 0x1740 */ public Colour HUDPlayerTrackArrowDotColourPolice;
        /* 0x1750 */ public Colour HUDPlayerTrackArrowDotColourPirate;
        /* 0x1760 */ public Colour HUDWarningColour;
        /* 0x1770 */ public Colour HUDNotifyColour;
        /* 0x1780 */ public float HUDPlayerTrackArrowMinFadeDist;
        /* 0x1784 */ public float HUDPlayerTrackArrowFadeRange;
        /* 0x1788 */ public float GalaxyMapRadialBorder;
        /* 0x178C */ public float GalaxyMapRadialTargetDist;
        /* 0x1790 */ public float IconBackgroundAlpha;
        /* 0x1794 */ public float WantedLevelWitnessPulseRate;
        /* 0x1798 */ public float WantedLevelWitnessOffset;
        /* 0x179C */ public float WantedLevelTimeoutPulseRate;
        /* 0x17A0 */ public float WantedLevelWitnessAlpha;
        /* 0x17A4 */ public float WantedLevelScanAlpha;
        /* 0x17A8 */ public float WantedLevelScannedRate;
        [NMS(Size = 0x4, Ignore = true)]
        /* 0x17AC */ public byte[] Padding17AC;
        /* 0x17B0 */ public List<NMSString0x80> StatIcons;
        /* 0x17C0 */ public bool ShowJetpackNotificationForNonTerrain;
        /* 0x17C4 */ public float StatsMessageDelayTime;
        /* 0x17C8 */ public float SeasonMessageDelayTime;
        /* 0x17CC */ public int NotificationsResourceExtractHintCount;
        /* 0x17D0 */ public float NotificationStaminaHintDistanceWalked;
        /* 0x17D4 */ public float NotificationMinVisibleTime;
        /* 0x17D8 */ public float NotificationHazardSafeThreshold;
        /* 0x17DC */ public float NotificationHazardTimer;
        /* 0x17E0 */ public float NotificationInteractHintStartTime;
        /* 0x17E4 */ public float NotificationBuildHintStartTime;
        /* 0x17E8 */ public float NotificationJetpackTime;
        /* 0x17EC */ public float NotificationShieldTime;
        /* 0x17F0 */ public float NotificationShipBoostTime;
        /* 0x17F4 */ public float NotificationShipBoostTimeVR;
        /* 0x17F8 */ public float NotificationCantFireTime;
        /* 0x17FC */ public float NotificationDangerTime;
        /* 0x1800 */ public float NotificationScanTime;
        /* 0x1804 */ public float NotificationScanTimeCutoff;
        /* 0x1808 */ public float NotificationMessageCycleTime;
        /* 0x180C */ public float NotificationMaxPageHintTime;
        /* 0x1810 */ public float NotificationShipJumpMinTime;
        /* 0x1814 */ public float NotificationShipJumpReminderTime;
        /* 0x1818 */ public float NotificationShipJumpReminderTutorial;
        /* 0x181C */ public float NotificationShipBoostMinTime;
        /* 0x1820 */ public float NotificationShipBoostReminderTime;
        /* 0x1824 */ public float NotificationShipBoostReminderTimeTutorial;
        /* 0x1828 */ public float LandNotifySpeedThreshold;
        /* 0x182C */ public float LandNotifyHeightThreshold;
        /* 0x1830 */ public float LandNotifyTimeThreshold;
        /* 0x1834 */ public float NotificationTimeBeforeHeridiumMarker;
        /* 0x1838 */ public float NotificationUrgentMessageTime;
        /* 0x183C */ public float NotificationGoToSpaceStationWait;
        /* 0x1840 */ public float NotificationMonolithMissionWait;
        /* 0x1844 */ public float NotificationFinalMissionWait;
        /* 0x1848 */ public float NotificationWaypointReachDistance;
        /* 0x184C */ public float NotificationBridgeReachDistance;
        /* 0x1850 */ public float NotificationDiscoveryIdleTime;
        /* 0x1854 */ public float NotificationInfoIdleTime;
        /* 0x1858 */ public float NotificationNewTechIdleTime;
        /* 0x185C */ public float NotificationScanEventMissionIdleTime;
        /* 0x1860 */ public float NotificationDeviceIdleTime;
        /* 0x1864 */ public float NotificationMissionHintTime;
        /* 0x1868 */ public float NotificationMissionHintTimeCritical;
        /* 0x186C */ public float NotificationMissionHintTimeSecondary;
        /* 0x1870 */ public Vector2f NotificationMissionHintPauseTime;
        /* 0x1878 */ public Vector2f NotificationMissionHintPauseTimeCritical;
        /* 0x1880 */ public Vector2f NotificationMissionHintPauseTimeSecondary;
        /* 0x1888 */ public float TooltipTime;
        /* 0x188C */ public float InventoryIconTime;
        /* 0x1890 */ public float MessageNotificationTime;
        /* 0x1894 */ public float MessageTimeQuick;
        /* 0x1898 */ public float ItemReceivedMessageTimeToAdd;
        /* 0x189C */ public float DeathMessageSwitchTime;
        /* 0x18A0 */ public float DeathMessageTotalTime;
        /* 0x18B0 */ public Colour DeathMessageColour;
        /* 0x18C0 */ public Colour PinnedRecipeBorder;
        [NMS(Size = 0x20)]
        /* 0x18D0 */ public string DistanceUnitM;
        [NMS(Size = 0x20)]
        /* 0x18F0 */ public string DistanceUnitKM;
        [NMS(Size = 0x20)]
        /* 0x1910 */ public string DistanceUnitMpS;
        /* 0x1930 */ public float ZoomHUDElementsOffsetX;
        /* 0x1934 */ public float ZoomHUDElementsOffsetY;
        /* 0x1938 */ public float ZoomHUDElementTime;
        /* 0x193C */ public float HUDElementsOffsetHMDSide;
        /* 0x1940 */ public float HUDElementsOffsetHMDTop;
        /* 0x1944 */ public float HUDElementsOffsetHMDBottom;
        /* 0x1948 */ public float HUDElementsOffsetX_0;
        /* 0x194C */ public float HUDElementsOffsetY_0;
        /* 0x1950 */ public float HUDElementsOffsetX_1;
        /* 0x1954 */ public float HUDElementsOffsetY_1;
        /* 0x1958 */ public float HUDElementsOffsetX_2;
        /* 0x195C */ public float HUDElementsOffsetY_2;
        /* 0x1960 */ public float HUDElementsOffsetX_3;
        /* 0x1964 */ public float HUDElementsOffsetY_3;
        /* 0x1968 */ public float HUDElementsOffsetX_4;
        /* 0x196C */ public float HUDElementsOffsetY_4;
        /* 0x1970 */ public float HUDElementsOffsetX_5;
        /* 0x1974 */ public float HUDElementsOffsetY_5;
        /* 0x1978 */ public GcWorldUISettings WorldUISettings;
        /* 0x19A8 */ public float PauseMenuHoldTime;
        /* 0x19AC */ public Vector2f PlanetLabelOffset;
        /* 0x19B4 */ public Vector2f PlanetMeasureOffset;
        /* 0x19BC */ public Vector2f PlanetLineOffset;
        /* 0x19C4 */ public float PlanetLabelTime;
        /* 0x19C8 */ public float PlanetLabelAngle;
        /* 0x19D0 */ public Colour ItemSlotColourSubstance;
        /* 0x19E0 */ public Colour ItemSlotColourTech;
        /* 0x19F0 */ public Colour ItemSlotColourTechCharge;
        /* 0x1A00 */ public Colour ItemSlotColourTechDamage;
        /* 0x1A10 */ public Colour ItemSlotColourPartiallyInstalled;
        /* 0x1A20 */ public float ItemSlotColourTechChargeRate;
        /* 0x1A30 */ public Colour ItemSlotColourProduct;
        /* 0x1A40 */ public Colour ItemSlotTextColourSubstance;
        /* 0x1A50 */ public Colour ItemSlotTextColourTech;
        /* 0x1A60 */ public Colour ItemSlotTextColourProduct;
        /* 0x1A70 */ public float InteractionScanScanTime;
        /* 0x1A74 */ public float InteractionScanMinTime;
        /* 0x1A78 */ public float InteractionScanDisplayTime;
        /* 0x1A7C */ public float InteractionScanSlapTime;
        /* 0x1A80 */ public float InteractionScanSlapScale;
        /* 0x1A84 */ public float InteractionScanSlapOverallTime;
        /* 0x1A88 */ public TkCurveType InteractionScanSlapCurve;
        /* 0x1A8C */ public float ShipHUDMissileLockSizeMin;
        /* 0x1A90 */ public float ShipHUDMissileLockSizeMax;
        /* 0x1A94 */ public float ShipHUDMissileLockSpringSlow;
        /* 0x1A98 */ public float ShipHUDMissileLockSpringFast;
        /* 0x1A9C */ public float ShipHUDMaxOffscreenTargetDist;
        /* 0x1AA0 */ public float ShipHUDTargetRadius;
        /* 0x1AA4 */ public float ShipHUDTargetTriangleRadius;
        /* 0x1AA8 */ public float ShipHUDTargetAlpha;
        /* 0x1AAC */ public float ShipHUDTargetArrowLength;
        /* 0x1AB0 */ public float ShipHUDTargetMinDist;
        /* 0x1AB4 */ public float ShipHUDTargetRange;
        /* 0x1AB8 */ public float ShipHUDTargetScale;
        /* 0x1ABC */ public float ShipHUDTargetArrowsRotationRate;
        /* 0x1AC0 */ public Colour ShipHUDTargetArrowsColourOutOfRange;
        /* 0x1AD0 */ public Colour ShipHUDTargetArrowsColourThreat;
        /* 0x1AE0 */ public Colour ShipHUDTargetArrowsColourLocal;
        /* 0x1AF0 */ public List<Colour> ShipHUDTargetArrowsColour;
        /* 0x1B00 */ public Colour ShipHUDAimTargetColour;
        /* 0x1B10 */ public Colour ShipHUDAimTargetCritColour;
        /* 0x1B20 */ public float ShipHUDHitPointTime;
        /* 0x1B24 */ public float ShipHUDHitPointSize;
        /* 0x1B28 */ public float TargetScreenFoV;
        /* 0x1B2C */ public float TargetScreenDistance;
        /* 0x1B30 */ public Vector2f TargetScreenCamOffset;
        /* 0x1B38 */ public float InventoryFullMessageRepeatTime;
        /* 0x1B3C */ public float HoldTimerResetTime;
        /* 0x1B40 */ public bool ModelRendererBGPass;
        /* 0x1B41 */ public bool ModelRendererPass1;
        /* 0x1B42 */ public bool ModelRendererPass2;
        /* 0x1B44 */ public float HazardScreenEffectPulseRate;
        /* 0x1B48 */ public float KeepHazardBarActiveTime;
        /* 0x1B4C */ public float KeepSecondHazardBarActiveTime;
        /* 0x1B50 */ public float HazardBarPulseTime;
        /* 0x1B54 */ public float HazardScreenEffectPulseTime;
        /* 0x1B58 */ public float HazardScreenEffectStrength;
        /* 0x1B5C */ public float HazardWarningPulseTime;
        /* 0x1B60 */ public float HazardWarningPulseStrength;
        /* 0x1B64 */ public float HazardPainPulseStrength;
        /* 0x1B68 */ public float ShieldSpringTime;
        /* 0x1B6C */ public float ShieldPulseTime;
        /* 0x1B70 */ public float ShieldHazardPulseRate;
        /* 0x1B74 */ public float ShieldHazardPulseThreshold;
        /* 0x1B78 */ public float AlwaysOnHazardThreshold;
        /* 0x1B7C */ public float AlwaysOnHazardStrengthTox;
        /* 0x1B80 */ public float AlwaysOnHazardStrengthHeat;
        /* 0x1B84 */ public float AlwaysOnHazardStrengthRad;
        /* 0x1B88 */ public float AlwaysOnHazardStrengthCold;
        /* 0x1B8C */ public float AlwaysOnHazardMultiplierTox;
        /* 0x1B90 */ public float AlwaysOnHazardMultiplierHeat;
        /* 0x1B94 */ public float AlwaysOnHazardMultiplierRad;
        /* 0x1B98 */ public float AlwaysOnHazardMultiplierCold;
        /* 0x1B9C */ public float HazardPulseRate;
        /* 0x1BA0 */ public List<NMSString0x80> HazardTextures;
        /* 0x1BB0 */ public List<NMSString0x80> HazardNormalMaps;
        /* 0x1BC0 */ public List<NMSString0x80> HazardHeightmaps;
        /* 0x1BD0 */ public float IconPulseRate;
        /* 0x1BE0 */ public Colour EnergyBgColour;
        /* 0x1BF0 */ public Colour EnergyBgPulseColour;
        /* 0x1C00 */ public Colour HazardBgPulseColour;
        /* 0x1C10 */ public Colour HazardDamagePulseColour;
        /* 0x1C20 */ public Colour ShieldColour;
        /* 0x1C30 */ public Colour ShieldDamageColour;
        /* 0x1C40 */ public Colour ShieldBgColour;
        /* 0x1C50 */ public Colour ShieldDamageBgColour;
        /* 0x1C60 */ public Vector2f ScanLabelOffset;
        /* 0x1C68 */ public Vector2f InteractionLabelOffset;
        /* 0x1C70 */ public Vector2f InteractionLabelOffset_1;
        /* 0x1C78 */ public Vector2f InteractionLabelSize;
        /* 0x1C80 */ public Vector2f InteractionLabelLineOffset;
        /* 0x1C88 */ public float InteractionLabelRadiusScaler;
        /* 0x1C8C */ public float InteractionLabelHeight;
        /* 0x1C90 */ public float InteractionLabelLineAlpha;
        /* 0x1C94 */ public float InteractionIconInnerRadius;
        /* 0x1C98 */ public float InteractionIconOuterRadius;
        /* 0x1C9C */ public float InteractionLabelPixelHeightMin;
        /* 0x1CA0 */ public float InteractionLabelPixelHeightMax;
        /* 0x1CA4 */ public float ScanTime;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x1CA8 */ public byte[] Padding1CA8;
        /* 0x1CB0 */ public GcModelViewCollection ModelViews;
        /* 0x3150 */ public Colour CursorColour;
        /* 0x3160 */ public Colour CursorConfirmColour;
        /* 0x3170 */ public Colour CursorTransferUploadColour;
        /* 0x3180 */ public Colour CursorDeleteColour;
        /* 0x3190 */ public float CursorHoverSlowFactor;
        /* 0x3194 */ public float FrontendBGAlpha;
        /* 0x3198 */ public float FrontendConfirmTimeMouseMultiplier;
        /* 0x319C */ public float FrontendConfirmTimeFast;
        /* 0x31A0 */ public float FrontendConfirmTime;
        [NMSDescription("Middle button time to scrap an item")]
        /* 0x31A4 */ public float FrontendConfirmTimeSlow;
        /* 0x31A8 */ public TkCurveType FrontendConfirmCurve;
        /* 0x31AC */ public float FrontendCursorSize;
        /* 0x31B0 */ public float FrontendCursorOffset;
        /* 0x31B4 */ public float PopupXClampOffset;
        /* 0x31B8 */ public float PopupXClampOffsetRightAligned;
        /* 0x31BC */ public float PopupSlotWidthOffset;
        /* 0x31C0 */ public float FrontendCursorWidth;
        /* 0x31C4 */ public float FrontendDeactivateTime;
        /* 0x31C8 */ public float FrontendDeactivateSplit;
        /* 0x31CC */ public float FrontendActivateTime;
        /* 0x31D0 */ public float FrontendActivateSplit;
        /* 0x31D4 */ public float FrontendStatCircleWidth;
        /* 0x31D8 */ public float FrontendStatCircleWidthExtra;
        /* 0x31DC */ public float FrontendBootTime;
        /* 0x31E0 */ public float FrontendBootBarTime;
        /* 0x31E4 */ public TkCurveType FrontendBootBarCurve;
        /* 0x31E8 */ public float PopupDebounceTime;
        /* 0x31EC */ public float PopupActivateTime;
        /* 0x31F0 */ public float PopupDeactivateTime;
        /* 0x31F4 */ public TkCurveType PopupActivateCurve1;
        /* 0x31F8 */ public TkCurveType PopupActivateCurve2;
        /* 0x31FC */ public float ByteBeatTreeLineWidth;
        /* 0x3200 */ public Colour ByteBeatTreeLineColour;
        /* 0x3210 */ public float ByteBeatVisLineWidth;
        /* 0x3220 */ public Colour ByteBeatVisLineColour;
        /* 0x3230 */ public Colour ByteBeatVisGridColour;
        /* 0x3240 */ public float ByteBeatIconLineWidth;
        /* 0x3244 */ public float ByteBeatIconPad;
        /* 0x3248 */ public float ByteBeatArpLineWidth;
        /* 0x324C */ public float ByteBeatArpRadius;
        /* 0x3250 */ public float ByteBeatArpPad;
        /* 0x3260 */ public Colour ByteBeatArpGridInactiveColour;
        /* 0x3270 */ public Colour ByteBeatArpGridActiveColour;
        /* 0x3280 */ public Colour ByteBeatArpPipInactiveColour;
        /* 0x3290 */ public Colour ByteBeatArpPipActiveColour;
        /* 0x32A0 */ public float ByteBeatSequencerLineWidth;
        /* 0x32A4 */ public float ByteBeatSequencerPad;
        /* 0x32A8 */ public float ByteBeatPartSequencerPad;
        /* 0x32AC */ public float ByteBeatSequencerCornerRadius;
        /* 0x32B0 */ public float ByteBeatRhythmBeatPad;
        /* 0x32B4 */ public float ByteBeatSequencerInactiveSaturation;
        /* 0x32B8 */ public float ByteBeatSequencerActiveSaturation;
        /* 0x32BC */ public float ByteBeatRhythmSequencerInactiveSaturation;
        /* 0x32C0 */ public float ByteBeatRhythmSequencerActiveSaturation;
        /* 0x32C4 */ public float ByteBeatSequencerUnpoweredTintStrength;
        /* 0x32D0 */ public Colour ByteBeatSequencerUnpoweredTint;
        /* 0x32E0 */ public Colour ByteBeatSequencerBGColourActive;
        /* 0x32F0 */ public Colour ByteBeatSequencerBGColourInactive;
        /* 0x3300 */ public Colour ByteBeatSequencerRimColourActive;
        /* 0x3310 */ public Colour ByteBeatSequencerRimColourInactive;
        /* 0x3320 */ public Colour ByteBeatRhythmColour0Active;
        /* 0x3330 */ public Colour ByteBeatRhythmColour0Inactive;
        /* 0x3340 */ public Colour ByteBeatRhythmColour1Active;
        /* 0x3350 */ public Colour ByteBeatRhythmColour1Inactive;
        /* 0x3360 */ public Colour ByteBeatRhythmColour2Active;
        /* 0x3370 */ public Colour ByteBeatRhythmColour2Inactive;
        /* 0x3380 */ public Colour ByteBeatSequencerHighlightColour;
        /* 0x3390 */ public float ByteBeatSequencerHighlightLineWidth;
        /* 0x3394 */ public float ByteBeatSliderLineWidth;
        /* 0x3398 */ public float ByteBeatSliderPad;
        /* 0x339C */ public float ByteBeatSliderCornerRadius;
        /* 0x33A0 */ public Colour ByteBeatSliderFGColour;
        /* 0x33B0 */ public Colour ByteBeatSliderTextActiveColour;
        /* 0x33C0 */ public Colour ByteBeatSliderTextInactiveColour;
        /* 0x33D0 */ public float ByteBeatSwitchPanelAlpha;
        /* 0x33D4 */ public float ByteBeatSwitchPanelSplit;
        /* 0x33E0 */ public Colour RadialMenuInnerColourSelected;
        /* 0x33F0 */ public Colour RadialMenuOuterColourSelected;
        /* 0x3400 */ public Colour RadialMenuInnerColourUnselected;
        /* 0x3410 */ public Colour RadialMenuOuterColourUnselected;
        /* 0x3420 */ public Colour RadialMenuInnerColourDisabled;
        /* 0x3430 */ public Colour RadialMenuOuterColourDisabled;
        /* 0x3440 */ public float RadialMenuInnerRadius;
        /* 0x3444 */ public float RadialMenuInnerRadiusCursor;
        /* 0x3448 */ public float RadialMenuWedgeOffset;
        /* 0x344C */ public float HatchPulseSpeed;
        /* 0x3450 */ public float HatchPulseWidth;
        /* 0x3454 */ public float HatchPulsePauseTime;
        /* 0x3458 */ public int HatchCount;
        /* 0x345C */ public float HatchCursorRadius;
        /* 0x3460 */ public float HatchAlphaMain;
        /* 0x3464 */ public float HatchAlphaBase;
        /* 0x3468 */ public float HatchAlphaCursor;
        /* 0x346C */ public float FrontendDoFNearPlaneMin;
        /* 0x3470 */ public float FrontendDoFNearPlaneMax;
        /* 0x3474 */ public float FrontendDoFFarPlaneMin;
        /* 0x3478 */ public float FrontendDoFFarPlaneMax;
        /* 0x347C */ public float FrontendDoFFarPlaneFadeMin;
        /* 0x3480 */ public float FrontendDoFFarPlaneFadeMax;
        /* 0x3484 */ public float FrontendDoFBlurMultiplier;
        /* 0x3488 */ public bool FrontendDoFEnableBokeh;
        /* 0x348C */ public TkCurveType FrontendDoFCurve;
        /* 0x3490 */ public float FrontendShineSpeed;
        /* 0x3494 */ public float FrontendToolbarTextHeight;
        /* 0x3498 */ public float FrontendToolbarTextHeightSelected;
        /* 0x349C */ public float FrontendTitleFontSpacing;
        /* 0x34A0 */ public float NGuiPadSensitivity;
        /* 0x34A4 */ public float NGuiMouseSensitivity;
        /* 0x34A8 */ public Vector2f NGuiTouchPadSensitivity;
        /* 0x34B0 */ public Colour TargetMarkerColour;
        /* 0x34C0 */ public Colour TargetMarkerHighlightColour;
        /* 0x34D0 */ public float TargetMarkerScaleStart;
        /* 0x34D4 */ public float TargetMarkerScaleEnd;
        /* 0x34D8 */ public float TargetMarkerFadeAngleMin;
        /* 0x34DC */ public float TargetMarkerFadeAngleRange;
        /* 0x34E0 */ public float HitMarkerPulseSize;
        /* 0x34E4 */ public float HitMarkerPulseSizeStatic;
        /* 0x34E8 */ public float HitMarkerPulseTime;
        /* 0x34F0 */ public Colour WantedColour;
        /* 0x3500 */ public Colour UnseenItemColour;
        /* 0x3510 */ public float PlanetPoleMaxDotProduct;
        /* 0x3514 */ public float SpaceMapLineWidth;
        /* 0x3518 */ public float SpaceMapLineBaseScale;
        /* 0x351C */ public float SpaceMapLineBaseFade;
        /* 0x3520 */ public float SpaceMapShipCombineDistance;
        /* 0x3524 */ public bool SpaceMapShowPlanets;
        /* 0x3525 */ public bool SpaceMapShowPlanetLines;
        /* 0x3526 */ public bool SpaceMapShowStation;
        /* 0x3527 */ public bool SpaceMapShowStationLines;
        /* 0x3528 */ public bool SpaceMapShowNexus;
        /* 0x3529 */ public bool SpaceMapShowNexusLines;
        /* 0x352A */ public bool SpaceMapShowShips;
        /* 0x352B */ public bool SpaceMapShowShipLines;
        /* 0x352C */ public bool SpaceMapShowFrieghters;
        /* 0x352D */ public bool SpaceMapShowFrieghterLines;
        /* 0x352E */ public bool SpaceMapShowPulseEncounters;
        /* 0x352F */ public bool SpaceMapShowPulseEncounterLines;
        /* 0x3530 */ public float SpaceMapFoV;
        /* 0x3534 */ public float SpaceMapAspectRatio;
        /* 0x3538 */ public float SpaceMapDistanceScale;
        /* 0x353C */ public float SpaceMapDistanceLogScaler;
        /* 0x3540 */ public TkCurveType SpaceMapDistanceCurve;
        /* 0x3544 */ public float SpaceMapScaleMin;
        /* 0x3548 */ public float SpaceMapScaleRangeMin;
        /* 0x354C */ public float SpaceMapScaleRangeMax;
        /* 0x3550 */ public float SpaceMapObjectScale;
        /* 0x3554 */ public float SpaceMapFreighterScale;
        /* 0x3558 */ public float SpaceMapStationScale;
        /* 0x355C */ public float SpaceMapPlanetScale;
        /* 0x3560 */ public float SpaceMapPlanetLineOffset;
        /* 0x3564 */ public float SpaceMapMoonScale;
        /* 0x3568 */ public float SpaceMapActionScale;
        /* 0x356C */ public float SpaceMapShipScale;
        /* 0x3570 */ public float SpaceMapMarkerScale;
        /* 0x3574 */ public float SpaceMapDistance;
        /* 0x3578 */ public float SpaceMapMaxTraderDistance;
        /* 0x357C */ public float SpaceMapDistanceMultiplier;
        /* 0x3580 */ public float SpaceMapHorizonThickness;
        /* 0x3584 */ public float SpaceMapFadeAngleMin;
        /* 0x3588 */ public float SpaceMapFadeAngleMax;
        /* 0x358C */ public float SpaceMapCamHeight;
        /* 0x3590 */ public float SpaceMapCamAngle;
        /* 0x3594 */ public float SpaceMapCamDistance;
        /* 0x3598 */ public float SpaceMapShipScaleMin;
        /* 0x359C */ public float SpaceMapLightPitch;
        /* 0x35A0 */ public float SpaceMapLightYaw;
        /* 0x35B0 */ public Colour SpaceFriendlyShipLineColour;
        /* 0x35C0 */ public Colour SpaceEnemyShipLineColour;
        /* 0x35D0 */ public Vector3f SpaceMapPosScaler;
        /* 0x35E0 */ public Colour SpaceMapAttackColour;
        /* 0x35F0 */ public Colour SpaceMapOtherPlayerColour;
        /* 0x3600 */ public Colour SpaceMapThreatColour;
        /* 0x3610 */ public Colour SpaceMapNeutralColour;
        /* 0x3620 */ public Colour SpaceMapDeathPointColour;
        /* 0x3630 */ public GcSpaceMapObjectData SpaceMapMarkerData;
        /* 0x3660 */ public GcSpaceMapObjectData SpaceMapPlanetData;
        /* 0x3690 */ public GcSpaceMapObjectData SpaceMapStationData;
        /* 0x36C0 */ public GcSpaceMapObjectData SpaceMapNexusData;
        /* 0x36F0 */ public GcSpaceMapObjectData SpaceMapShipData;
        /* 0x3720 */ public GcSpaceMapObjectData SpaceMapFreighterData;
        /* 0x3750 */ public GcSpaceMapObjectData SpaceMapPulseEncounterData;
        /* 0x3780 */ public Vector2f HUDTargetHealthOffset;
        /* 0x3788 */ public Vector2f HUDTargetHealthSize;
        /* 0x3790 */ public Vector2f HUDTargetHealthIconOffset;
        /* 0x3798 */ public float HUDTargetHealthIconSize;
        /* 0x379C */ public float HUDTargetHealthDangerTime;
        /* 0x37A0 */ public float HUDTargetMarkerOffset;
        /* 0x37A4 */ public float HUDTargetMarkerSize;
        /* 0x37A8 */ public float HUDTargetIconOffset;
        /* 0x37AC */ public float HUDTargetIconSize;
        /* 0x37B0 */ public float HUDMarkerOffset;
        /* 0x37C0 */ public Colour HUDMarkerColour;
        /* 0x37D0 */ public Colour HUDSpaceshipColour;
        /* 0x37E0 */ public Colour HUDRelicMarkerColourDiscovered;
        /* 0x37F0 */ public Colour HUDRelicMarkerColourUnknown;
        /* 0x3800 */ public Colour HUDOutpostColour;
        /* 0x3810 */ public Vector2f HUDMarkerPrimaryIndicatorOffset;
        /* 0x3818 */ public Vector2f HUDMarkerCompassPrimaryIndicatorOffset;
        [NMS(Size = 0x100)]
        /* 0x3820 */ public string HUDMarkerIcon;
        [NMS(Size = 0x100)]
        /* 0x3920 */ public string HUDMarkerPrimaryIndicatorIcon;
        [NMS(Size = 0x100)]
        /* 0x3A20 */ public string HUDMarkerColourIcon;
        [NMS(Size = 0x100)]
        /* 0x3B20 */ public string HUDPointIcon;
        [NMS(Size = 0x100)]
        /* 0x3C20 */ public string HUDSpaceshipIcon;
        [NMS(Size = 0x100)]
        /* 0x3D20 */ public string HUDSaveIcon;
        [NMS(Size = 0x100)]
        /* 0x3E20 */ public string HUDDeathPointIcon;
        [NMS(Size = 0x100)]
        /* 0x3F20 */ public string HUDHexAnimIcon;
        [NMS(Size = 0x100)]
        /* 0x4020 */ public string HUDCircleAnimIcon;
        /* 0x4120 */ public float HUDMarkerAnimSpeed;
        /* 0x4124 */ public float HUDMarkerAnimScale;
        /* 0x4128 */ public float HUDMarkerAnimOffset;
        /* 0x412C */ public float HUDMarkerAnimLoopTime;
        /* 0x4130 */ public TkCurveType HUDMarkerAnimAlphaCurve;
        /* 0x4134 */ public TkCurveType HUDMarkerAnimCurve;
        /* 0x4138 */ public float HUDMarkerPrimaryIndicatorSize;
        /* 0x413C */ public float HUDPetMarkerAngleTest;
        /* 0x4140 */ public float HUDMarkerHoverAngleTestGround;
        /* 0x4144 */ public float HUDPetCentreScreenAngle;
        /* 0x4148 */ public float HUDNetworkMarkerHoverAngleTestGround;
        /* 0x414C */ public float HUDMarkerWideHoverAngleTest;
        /* 0x4150 */ public float HUDMarkerHoverAngleTestShip;
        /* 0x4154 */ public float HUDMarkerHoverShowLargeAngleTest;
        /* 0x4158 */ public float HUDNetworkMarkerHoverShowLargeAngleTest;
        /* 0x415C */ public float HUDMarkerShipOffsetMaxDist;
        /* 0x4160 */ public float HUDMarkerShipOffsetMinDist;
        /* 0x4164 */ public float HUDMarkerNearFadeDistance;
        /* 0x4168 */ public float HUDMarkerNearFadeRange;
        /* 0x416C */ public float HUDMarkerFarDistance;
        /* 0x4170 */ public float HUDMarkerFarFadeRange;
        /* 0x4174 */ public float HUDMarkerScalerMin;
        /* 0x4178 */ public float HUDMarkerScalerRange;
        /* 0x417C */ public float HUDMarkerScalerSizeMin;
        /* 0x4180 */ public float HUDMarkerScalerSizeMax;
        /* 0x4184 */ public float HUDMarkerHorizonBlendRange;
        /* 0x4188 */ public float HUDMarkerAlpha;
        /* 0x418C */ public float HUDMarkerModelFadeRange;
        /* 0x4190 */ public float HUDMarkerModelFadeMinHeight;
        /* 0x4194 */ public float HUDMarkerShowActualIconDistance;
        /* 0x4198 */ public float HUDMarkerShowActualSpaceIconDistance;
        /* 0x419C */ public float HUDMarkerActiveTime;
        /* 0x41A0 */ public TkCurveType HUDMarkerActiveCurve;
        /* 0x41A4 */ public float HUDMarkerIconHoverMinScale;
        /* 0x41A8 */ public float AltimeterResolution;
        /* 0x41AC */ public float AltimeterLineSpacing;
        /* 0x41B0 */ public float AltimeterWidth;
        /* 0x41B4 */ public float AltimeterMin;
        /* 0x41B8 */ public float AltimeterMax;
        /* 0x41BC */ public float AltimeterTextSize;
        /* 0x41C0 */ public float AltimeterMinValue;
        /* 0x41D0 */ public Colour AltimeterBandColour1;
        /* 0x41E0 */ public Colour AltimeterBandColour2;
        /* 0x41F0 */ public Colour AltimeterColour1;
        /* 0x4200 */ public Colour AltimeterColour2;
        /* 0x4210 */ public float LockOnMarkerSize;
        /* 0x4214 */ public float LockOnMarkerSizeLock;
        /* 0x4220 */ public Colour LockOnMarkerActiveColour;
        /* 0x4230 */ public float MissileIconAttackPulseTime;
        /* 0x4234 */ public float MissileIconAttackPulseAmount;
        /* 0x4238 */ public float NGuiModelRotationDegreesX;
        /* 0x423C */ public float NGuiModelRotationDegreesY;
        /* 0x4240 */ public float NGuiModelRotationDegreesZ;
        /* 0x4244 */ public float NGuiModelViewDistanceGlobal;
        /* 0x4248 */ public float NGuiModelViewDistanceSuitPage;
        /* 0x424C */ public float NGuiModelViewDistanceWeaponPage;
        /* 0x4250 */ public float NGuiModelViewDistanceShipPage;
        /* 0x4254 */ public float NGuiModelViewDistanceDiscoveryPage;
        /* 0x4258 */ public float NGuiModelViewFov;
        /* 0x425C */ public float NGuiModelViewCdSmoothTime;
        /* 0x4260 */ public float NGuiAltPlacementDistanceScrollSpeed;
        /* 0x4264 */ public float NGuiPlacementAngleScrollSpeed;
        /* 0x4268 */ public float NGuiModelViewFractionOfBBHeightAboveReflectivePlane;
        /* 0x4270 */ public Vector3f NGuiModelTranslationFactors;
        /* 0x4280 */ public Vector3f NGuiModelTranslationFactorsInteraction;
        /* 0x4290 */ public Vector3f NGuiThumbnailModelTranslationFactors;
        /* 0x42A0 */ public float NGuiThumbnailModelRotationDegreesY;
        /* 0x42A4 */ public float NGuiThumbnailModelViewDistance;
        /* 0x42A8 */ public float NGuiCursorOffsetMultiplier;
        /* 0x42AC */ public float NGuiActiveAreaOffsetTime;
        /* 0x42B0 */ public Vector2f NGuiMin2DParallax;
        /* 0x42B8 */ public Vector2f NGuiMax2DParallax;
        /* 0x42C0 */ public Vector2f NGuiModelParallax;
        /* 0x42C8 */ public Vector2f NGuiShipInteractParallax;
        /* 0x42D0 */ public Vector2f InteractionWorldParallax;
        /* 0x42D8 */ public float TargetParallaxMouseMultiplier;
        /* 0x42DC */ public float TargetParallaxMaintenancePageMultiplier;
        /* 0x42E0 */ public float NGuiModelViewFadeInAfterRenderTime;
        /* 0x42E4 */ public TkCurveType NGuiModelViewFadeInAfterRenderCurve;
        /* 0x42E8 */ public bool NGuiUseSeparateLayersForModelAndReflection;
        /* 0x42EC */ public GcDiscoveryHelperTimings DiscoveryHelperTimings;
        /* 0x42F8 */ public GcHUDStartupTable IntroTiming;
        /* 0x4378 */ public GcInventorySlotActionData InstallTechSlotAction;
        /* 0x4394 */ public GcInventorySlotActionData BuildProductSlotAction;
        /* 0x43B0 */ public GcInventorySlotActionData ChargeSlotAction;
        /* 0x43CC */ public GcInventorySlotActionData RepairSlotAction;
        /* 0x43E8 */ public GcInventorySlotActionData NewSlotRevealAction;
        /* 0x4404 */ public GcInventorySlotActionData NewSlotPulseAction;
        /* 0x4420 */ public GcInventorySlotActionData InventoryHintAction;
        /* 0x443C */ public float ReportBaseFlashTime;
        /* 0x4440 */ public float ReportBaseFlashIntensity;
        /* 0x4444 */ public float ReportBaseFlashDelay;
        /* 0x4448 */ public int ReportBaseTexWidth;
        /* 0x444C */ public int ReportBaseTexHeight;
        /* 0x4450 */ public float ReportCameraSpeed;
        /* 0x4454 */ public float AmbientModeFadeTime;
        /* 0x4458 */ public bool HideQuickMenuControls;
        /* 0x4459 */ public bool QuickMenuAllowCycle;
        /* 0x445C */ public float TextChatMaxDisplayTime;
        /* 0x4460 */ public float TextChatStayBigAfterTextInput;
        /* 0x4464 */ public int BuildingShopMaxItems;
        /* 0x4468 */ public float ShipScreenTexScale;
        /* 0x446C */ public float MultiplayerTeleportEffectDisappearTime;
        /* 0x4470 */ public float MultiplayerTeleportEffectAppearTime;
        /* 0x4474 */ public int AbandonedFreighterAirlockRoomNumber;
        [NMS(Size = 0x8, Ignore = true)]
        /* 0x4478 */ public byte[] EndPadding;
    }
}
